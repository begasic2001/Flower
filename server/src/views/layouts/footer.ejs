
<footer class="footer">
    <div class="container">
        <div class="row">

            <div class="col-lg-3 footer_col">
                <div class="footer_column footer_contact">
                    <div class="logo_container">
                        <div class="logo"><a href="#">OneTech</a></div>
                    </div>
                    <div class="footer_title">Got Question? Call Us 24/7</div>
                    <div class="footer_phone">+38 068 005 3570</div>
                    <div class="footer_contact_text">
                        <p>17 Princess Road, London</p>
                        <p>Grester London NW18JR, UK</p>
                    </div>
                    <div class="footer_social">
                        <ul>
                            <li><a href="#"><i class="fab fa-facebook-f"></i></a></li>
                            <li><a href="#"><i class="fab fa-twitter"></i></a></li>
                            <li><a href="#"><i class="fab fa-youtube"></i></a></li>
                            <li><a href="#"><i class="fab fa-google"></i></a></li>
                            <li><a href="#"><i class="fab fa-vimeo-v"></i></a></li>
                        </ul>
                    </div>
                </div>
            </div>

            <div class="col-lg-2 offset-lg-2">
                <div class="footer_column">
                    <div class="footer_title">Find it Fast</div>
                    <ul class="footer_list">
                        <li><a href="#">Computers & Laptops</a></li>
                        <li><a href="#">Cameras & Photos</a></li>
                        <li><a href="#">Hardware</a></li>
                        <li><a href="#">Smartphones & Tablets</a></li>
                        <li><a href="#">TV & Audio</a></li>
                    </ul>
                    <div class="footer_subtitle">Gadgets</div>
                    <ul class="footer_list">
                        <li><a href="#">Car Electronics</a></li>
                    </ul>
                </div>
            </div>

            <div class="col-lg-2">
                <div class="footer_column">
                    <ul class="footer_list footer_list_2">
                        <li><a href="#">Video Games & Consoles</a></li>
                        <li><a href="#">Accessories</a></li>
                        <li><a href="#">Cameras & Photos</a></li>
                        <li><a href="#">Hardware</a></li>
                        <li><a href="#">Computers & Laptops</a></li>
                    </ul>
                </div>
            </div>

            <div class="col-lg-2">
                <div class="footer_column">
                    <div class="footer_title">Customer Care</div>
                    <ul class="footer_list">
                        <li><a href="#">My Account</a></li>
                        <li><a href="#">Order Tracking</a></li>
                        <li><a href="#">Wish List</a></li>
                        <li><a href="#">Customer Services</a></li>
                        <li><a href="#">Returns / Exchange</a></li>
                        <li><a href="#">FAQs</a></li>
                        <li><a href="#">Product Support</a></li>
                    </ul>
                </div>
            </div>

        </div>
    </div>
</footer>

<!-- Copyright -->

<div class="copyright">
    <div class="container">
        <div class="row">
            <div class="col">

                <div
                    class="copyright_container d-flex flex-sm-row flex-column align-items-center justify-content-start">
                    <div class="copyright_content">
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                        Copyright &copy;
                        <script>document.write(new Date().getFullYear());</script> All rights reserved | This template
                        is made with <i class="fa fa-heart" aria-hidden="true"></i> by <a href="https://colorlib.com"
                            target="_blank">Colorlib</a>
                        <!-- Link back to Colorlib can't be removed. Template is licensed under CC BY 3.0. -->
                    </div>
                    <div class="logos ml-sm-auto">
                        <ul class="logos_list">
                            <li><a href="#"><img src="images/logos_1.png" alt=""></a></li>
                            <li><a href="#"><img src="images/logos_2.png" alt=""></a></li>
                            <li><a href="#"><img src="images/logos_3.png" alt=""></a></li>
                            <li><a href="#"><img src="images/logos_4.png" alt=""></a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
</div>

<script src="/client/js/jquery-3.3.1.min.js"></script>
<script src="/client/styles/bootstrap4/popper.js"></script>
<script src="/client/styles/bootstrap4/bootstrap.min.js"></script>
<script src="/client/plugins/greensock/TweenMax.min.js"></script>
<script src="/client/plugins/greensock/TimelineMax.min.js"></script>
<script src="/client/plugins/scrollmagic/ScrollMagic.min.js"></script>
<script src="/client/plugins/greensock/animation.gsap.min.js"></script>
<script src="/client/plugins/greensock/ScrollToPlugin.min.js"></script>
<script src="/client/plugins/OwlCarousel2-2.2.1/owl.carousel.js"></script>
<script src="/client/plugins/slick-1.8.0/slick.js"></script>
<script src="/client/plugins/easing/easing.js"></script>
<script src="/client/js/custom.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.2.0/axios.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        const instance = axios.create({
            baseURL: 'http://localhost:9000',
            timeout: 3 * 1000,
            headers: {
                'Content-Type': 'Application/json'
            }
        });
        
        instance.interceptors.request.use(async function (config) {
            if (config.url.indexOf('/api/auth/login') >= 0 || config.url.indexOf('/api/auth/refresh-token') >= 0) {
                return config
            }
            const token = await instance.getLocalAccessToken()
                config.headers['authorization'] = `Bearer ${token}`
                return config
          
            
        }, function (error) {
            // Do something with request error
            return Promise.reject(error);
        });
        
        instance.interceptors.response.use(async function (response) {
            const config = response.config
            if (config.url.indexOf('/api/auth/login') >= 0 || config.url.indexOf('/api/auth/refresh-token') >= 0) {
                return response
            }
            const { status, message } = response.data
          
                  if (status && status === 401) {
                    //B1 get accessToken from refreshToken
                    const token = await instance.getLocalRefreshToken()
                    const newRefresh = await refreshToken(token)
                    console.log(newRefresh)
                    if (newRefresh.status === 'success') {
                        console.log('da lay thanh cong token moi');
                        //B2 Đã lấy lại token
                        config.headers['authorization'] = `Bearer ${newRefresh.accessToken}`
                        // // B3
                        await instance.setLocalAccessToken(newRefresh.accessToken)
                        await instance.setLocalRefreshToken(newRefresh.refreshToken)
                        return instance(config)
                    }else{
                            const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })
                       
                            Toast.fire({
                                icon: 'error',
                                title: 'You must login first !!!'
                            })
                            return instance(config)
                    }
                } 
            return response
        }, function (error) {
            return Promise.reject(error);
        });

        const btnLogin = document.querySelector('button');
        if (btnLogin) {
            btnLogin.addEventListener('click', async (e) => {
                e.preventDefault()
                const { status, accessToken, refreshToken, user } = await login()
                if (status == 'success') {
                    await instance.setLocalAccessToken(accessToken)
                    await instance.setLocalRefreshToken(refreshToken)
                    await instance.setLocalInfoUser(user)
                    //window.location.replace("/")
                }
            })
        }
     
        async function login() {
            const email = $('input[name="email"]').val()
            const password = $('input[name="password"]').val()

            return await instance.post('/api/auth/login', {
                email: email,
                password: password,
            }).then((result) => {
                return result.data
            });
        }
        async function refreshToken(refreshToken) {
            return await instance.post('/api/auth/refresh-token', {
                refreshToken: refreshToken
            }).then((result) => {
                return result.data
            });
        }
            
        instance.setLocalAccessToken = async (token) => {
            window.localStorage.setItem('accessToken', token)
        }

        instance.setLocalRefreshToken = async (token) => {
            window.localStorage.setItem('refreshToken', token)
        }

        instance.setLocalInfoUser = async (user) => {
            window.localStorage.setItem('user', JSON.stringify(user))
        }

        instance.setLocalCart = async (cart) => {
            window.localStorage.setItem('cart', JSON.stringify(cart))
        }

        instance.getLocalAccessToken = async () => {
            return window.localStorage.getItem('accessToken') ? window.localStorage.getItem('accessToken') : null

        }
        instance.getLocalRefreshToken = async () => {
            return window.localStorage.getItem('refreshToken') ? window.localStorage.getItem('refreshToken') : null

        }
        instance.getLocalInfoUser = () => {
            return JSON.parse(window.localStorage.getItem('user')) ? JSON.parse(window.localStorage.getItem('user')) : null
        }

        instance.getLocalCart = async () => {
            return JSON.parse(window.localStorage.getItem('cart')) ? JSON.parse(window.localStorage.getItem('cart')) : null
        }
        
        
       
          
    </script>
<script>
    // hiển thị tên ng dùng sau khi đăng nhập
   
         let user = instance.getLocalInfoUser()
            if (user !== null) {
                $('.top_bar_user').append(`<ul class="standard_dropdown top_bar_dropdown">
                                        <li>
                                            <a href="/profile" id="profile">Hồ sơ<i class="fas fa-chevron-down"></i></a>
                                            <ul>
                                                <li><a href="#">Danh sách yêu thích</a></li>
                                                <li><a href="#">Thanh toán</a></li>
                                                <li><a href="#">Khác</a></li>
                                            </ul>
                                        </li>
                                    </ul>`)
            } else {
                $('.top_bar_user').append(`<div class="user_icon"><img src="/client/images/user.svg" alt=""></div>
                                                <div><a href="/login">Đăng nhập</a></div>
                                                <div><a href="/register">Đăng ký</a></div>`)
            }
        
</script>
<script>
            $('#userInfo').append(`<h5 class="cart-title text-center">${user.name}</h5>`)
                $(document).on("click", "#logout",async function (e) {
                        e.preventDefault();
                        let id = await instance.getLocalRefreshToken()
                        Swal.fire({
                            title: `Bạn có muốn đăng xuất `,
                            icon: "warning",
                            buttons: true,
                            dangerMode: true,
                        }).then((willDelete) => {
                            if (willDelete) {
                                $.ajax({
                                    url: `http://localhost:9000/api/auth/logout?refreshToken=${id}`,
                                    type: "DELETE",
                                }).then(() => {
                                    Swal.fire(`Đăng xuất thành công`).then(() => {
                                        window.localStorage.removeItem('accessToken')
                                        window.localStorage.removeItem('refreshToken')
                                        window.localStorage.removeItem('user')
                                        window.localStorage.removeItem('cart')
                                        window.location.replace('/');
                                    })
                                });
                            } else {
                                Swal.fire("Safe Data!");
                            }
                        });
                    });
</script>
<script>
    let countNumberCart = $('.cart_count')
    let totalCart = $('.cart_price')
    let countNumberWishList = $('.wishlist_count')
    if(user){
            document.addEventListener('DOMContentLoaded', async () => {
            await getCart()

                .then(async data => {
                        return await instance.setLocalCart(data)

                })
                .then(async () => {
                  
                    const cart = await instance.getLocalCart()
                    const countWishList = await getWishList()
                    let amount = 0;
                    let total = 0;
                    $.each(cart,async function(key,value){
                        if (value !== undefined) {
                        amount += value.amount;
                        total += value.total
                        }
                    })
                     const numberFormat = new Intl.NumberFormat("vi-VN", {
                        style: "currency",
                        currency: "VND",
                    });
                    countNumberCart.html(`<span>${amount}</span>`)
                    totalCart.html(numberFormat.format(total))    
                    countNumberWishList.html(countWishList.length)
                })
        })
    }else {
        countNumberCart.html(`<span>0</span>`)
        totalCart.html(0)
        countNumberWishList.html(0)
    }

    // Thêm giỏ hàng
     const btnAddToCart = document.querySelectorAll('.addCart');
     
     for(let i =0 ; i < btnAddToCart.length; i++){
        btnAddToCart[i].addEventListener('click', async (e) => {
             e.preventDefault()
             const attrNames = btnAddToCart[i].getAttributeNames().map(name => btnAddToCart[i].getAttribute(name));
             const productId = attrNames[1];
             const a = await addToCart(productId)
             const b = await getCart()
             Promise.all([a, b])
                 .then(async data => {
                    return await instance.setLocalCart(data[1])
                 })
                 .then(async data => {
                     const cart = await instance.getLocalCart()
                     let amount = 0;
                     let total = 0;
                     if (cart !== null) {
                         $.each(cart, async function (key, value) {
                             if (value !== undefined) {
                                 amount += value.amount;
                                 total += value.total
                             }
                             countNumberCart.html(`<span>${amount}</span>`)
                             totalCart.html(total)
                         })
                     }
                 })
         })
     }

            async function addToCart(productId) {
                        return await instance.post(`/api/cart/addToCart/${productId}`).then((result) => {
                           return result.data
                       })
            }

            async function getCart() {
                    return await instance.get(`/api/cart/getCart/`).then((result) => {
                        return result.data
                    });
                }
</script>
<script>
    // WISHLIST

    async function addToWishList(productId) {
            return await instance.post(`/api/wishlist/addToWishList/${productId}`).then((result) => {
                return result.data
            });
        }

     async function getWishList() {
            return await instance.get(`/api/wishlist/getWishList/`).then((result) => {
                return result.data
            });
        }

      $(document).ready(function () {
            $('.addWishList').on('click',async function (e) {
                e.preventDefault();
                const id = $(this).data('id');
                if (id) {
                    await addToWishList(id)
                    .then(async (data)=>{
                        const count = await getWishList()
                        countNumberWishList.html(count.length)
                         const Toast = Swal.mixin({
                            toast: true,
                            position: 'top-end',
                            showConfirmButton: false,
                            timer: 3000,
                            timerProgressBar: true,
                            didOpen: (toast) => {
                                toast.addEventListener('mouseenter', Swal.stopTimer)
                                toast.addEventListener('mouseleave', Swal.resumeTimer)
                            }
                        })
                        if($.isEmptyObject(data.status === 0)){
                             Toast.fire({
                                icon: 'error',
                                title: data.msg
                            })
                        }else{
                             Toast.fire({
                                icon: 'success',
                                title: data.msg
                            })
                        }
                        
                    })
                } else {
                    alert('danger');
                }
            });

        });

</script>
</body>

</html>